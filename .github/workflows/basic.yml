# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # See what environment variables are there
      - name: check environment variables
        run: |
          echo $GITHUB_ACTION_REPOSITORY
          echo $GITHUB_BASE_REF
          echo $GITHUB_EVENT_NAME
          echo $GITHUB_HEAD_REF
          echo $GITHUB_JOB
          echo $GITHUB_REF
          echo $GITHUB_REF_NAME
          echo $GITHUB_REPOSITORY
          echo $GITHUB_REPOSITORY_OWNER
          echo $GITHUB_WORKFLOW
          echo $RUNNER_ARCH
          echo $RUNNER_NAME

      - name: Extract repository name
        run: echo "reponame=$(basename $GITHUB_REPOSITORY | cut -d'/' -f2-)" >> $GITHUB_ENV

      - name: Talk to component database
        run: |
          echo $GITHUB_WORKSPACE
          echo $reponame
          echo $GITHUB_REPOSITORY_OWNER
          echo $GITHUB_REF_NAME
          python3 /grab_component.py $reponame $GITHUB_REPOSITORY_OWNER $GITHUB_REF_NAME
            
