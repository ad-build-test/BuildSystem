# How to Run 
# ansible-playbook --extra-vars "user=$USER ioc_name=sioc-123-123 executable_path=/afs/slac.stanford.edu/u/cd/pnispero/mps/central_node_ioc/" ./initial_softioc_deploy.yml
# This is for dev, and doesn't include using 'cram' and deploying a component to a 
# deployment location ($APP or $PHYSICS_TOP or $TOOLS/script or $PYDYM etc.)
# Process in detail: https://confluence.slac.stanford.edu/display/LCLSControls/CD+-+Deployment+Stage
- name: Initial IOC Deployment
  hosts: all
  # All vars from ioc_deploy.yml are accessible
  
  tasks:
  - name: Add component to $EPICS_IOC_TOP (ioc app release)
    ansible.builtin.file:
      path: '{{ ioc_release_folder }}/{{ component_name }}'
      state: directory
      mode: '775' # drwxrwxr-x
    # Location would depend on the facility

  # TODO: in continuous_ioc_deploy.yml create task for creating/updating 'current' symbolic link that should be after push
  # - name: Add ioc(s) to $IOC
  - name: Create sioc directory in $IOC (ioc link) if it doesn't exist
    ansible.builtin.file:
      path: '{{ ioc_link_folder }}/{{ ioc_name }}'
      state: directory
      mode: '775' # drwxrwxr-x

  - name: Create symbolic link for iocSpecificRelease for S3DF (DEV)
    ansible.builtin.file:
      src: '{{ executable_path }}'
      dest: '{{ ioc_filepath }}/iocSpecificRelease'
      state: link
    when: facility == "S3DF" # Assuming this is the DEV server

  - name: Create symbolic link for iocSpecificRelease for PROD
    ansible.builtin.file:
      src: '{{ ioc_deploy_filepath }}'
      dest: '{{ ioc_filepath }}/iocSpecificRelease'
      state: link
      force: true # Force creation even if dir doesn't exist since it won't if this is initial deployment
    when: deploy_type == "PROD"

    # 1) In $IOC_DATA, make directory for ioc if doesn't already exist
  - name: Create sioc directory in $IOC_DATA if it doesn't exist
    ansible.builtin.file:
      path: '{{ ioc_data_filepath }}'
      state: directory
      mode: '775' # drwxrwxr-x
    # 2) in the ioc folder, create these directories: archive, autosave, autosave-req, iocInfo, restore, yaml
  - name: Create multiple directories in $IOC_DATA/{{ ioc_name }} if they doesn't exist
    ansible.builtin.file:
      path: '{{ item }}'
      state: directory
      mode: '775' # drwxrwxr-x
    loop:
      - '{{ ioc_data_filepath }}/archive'
      - '{{ ioc_data_filepath }}/autosave'
      - '{{ ioc_data_filepath }}/autosave-req'
      - '{{ ioc_data_filepath }}/iocInfo'
      - '{{ ioc_data_filepath }}/restore'
      - '{{ ioc_data_filepath }}/yaml'

  # - name: Start ioc and shell into it
  #   ansible.builtin.shell: xterm -hold -e "siocRestart '{{ ioc_name }}' && iocConsole '{{ ioc_name }}'"


