# How to Run 
# ansible-playbook --extra-vars "user=$USER ioc_name=sioc-123-123 executable_path=/afs/slac.stanford.edu/u/cd/pnispero/mps/central_node_ioc/" ./initial_softioc_deploy.yml
# This is for dev, and doesn't include using 'cram' and deploying a component to a 
# deployment location ($APP or $PHYSICS_TOP or $TOOLS/script or $PYDYM etc.)
# Process in detail: https://confluence.slac.stanford.edu/display/LCLSControls/CD+-+Deployment+Stage
- name: Initial IOC Deployment
  hosts: all
  # All vars from ioc_deploy.yml are accessible
  
  tasks:
  - name: 'Create component directory at {{ ioc_release_folder }}/{{ component_name }}/{{ tag }}'
    ansible.builtin.file:
      path: '{{ ioc_release_folder }}/{{ component_name }}/{{ tag }}'
      state: directory
      mode: '775' # drwxrwxr-x

  - name: 'Create sioc directory at $IOC {{ ioc_link_folder }}/{{ ioc_name }}'
    ansible.builtin.file:
      path: '{{ ioc_link_folder }}/{{ ioc_name }}'
      state: directory
      mode: '775' # drwxrwxr-x

  - name: 'Create sym link {{ ioc_link_folder }}/{{ ioc_name }}/iocSpecificRelease to point to {{ ioc_release_folder }}/{{ component_name }}/{{ tag }}'
    ansible.builtin.file:
      src: '{{ ioc_release_folder }}/{{ component_name }}/{{ tag }}'
      dest: '{{ ioc_link_folder }}/{{ ioc_name }}/iocSpecificRelease'
      state: link
      force: true # Force creation even if src dir doesn't exist since it won't if this is initial deployment

  - name: 'Override {{ ioc_link_folder }}/{{ ioc_name }}/iocSpecificRelease to point to {{ user_src_repo }}'
    ansible.builtin.file:
      src: '{{ user_src_repo }}'
      dest: '{{ ioc_link_folder }}/{{ ioc_name }}/iocSpecificRelease'
      state: link
    when: user_src_repo != None # Assuming this is the DEV server

    # 1) In $IOC_DATA, make directory for ioc if doesn't already exist
  - name: 'Create sioc directory in {{ ioc_data_folder }}/{{ ioc_name }}'
    ansible.builtin.file:
      path: '{{ ioc_data_folder }}/{{ ioc_name }}'
      state: directory
      mode: '775' # drwxrwxr-x
    # 2) in the ioc folder, create these directories: archive, autosave, autosave-req, iocInfo, restore, yaml
  - name: 'Create multiple directories in {{ ioc_data_folder }}/{{ ioc_name }}'
    ansible.builtin.file:
      path: '{{ item }}'
      state: directory
      mode: '775' # drwxrwxr-x
    loop:
      - '{{ ioc_data_folder }}/{{ ioc_name }}/archive'
      - '{{ ioc_data_folder }}/{{ ioc_name }}/autosave'
      - '{{ ioc_data_folder }}/{{ ioc_name }}/autosave-req'
      - '{{ ioc_data_folder }}/{{ ioc_name }}/iocInfo'
      - '{{ ioc_data_folder }}/{{ ioc_name }}/restore'
      - '{{ ioc_data_folder }}/{{ ioc_name }}/yaml'

  # TODO: this task (although may not be worth doing if theres too much variation)
  # - name: Create startup.cmd (dev) st.cmd (prod)

  # - name: Start ioc and shell into it
  #   ansible.builtin.shell: xterm -hold -e "siocRestart '{{ ioc_name }}' && iocConsole '{{ ioc_name }}'"


