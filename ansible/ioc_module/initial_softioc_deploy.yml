# How to Run 
# ansible-playbook --extra-vars "user=$USER ioc_name=sioc-123-123 executable_path=/afs/slac.stanford.edu/u/cd/pnispero/mps/central_node_ioc/" ./initial_softioc_deploy.yml
# This is for dev, and doesn't include using 'cram' and deploying a component to a 
# deployment location ($APP or $PHYSICS_TOP or $TOOLS/script or $PYDYM etc.)
# Process in detail: https://confluence.slac.stanford.edu/display/LCLSControls/CD+-+Deployment+Stage

- name: Initial Soft IOC Deployment
  hosts: localhost
  vars: 
    iocCommon: '{{ iocCommon }}' # Taken from user env
    iocData: '{{ iocData }}' # Taken from user env
    user: '{{ user }}'
    ioc_name: '{{ ioc_name }}'
    ioc_filepath: '{{ iocCommon }}/{{ ioc_name }}'
    ioc_data_filepath: '{{ iocData }}/{{ ioc_name }}'
    # TODO: Add variables/arguments for the different facilities

  # TODO: Make a 'master playbook' that would call other softioc playbooks based off
  # what is needed, mainly initial / continual deployment

  tasks:
  # - name: Add component to $EPICS_IOC_TOP
    # Location would depend on the facility
  # - name: Add ioc(s) to $IOC

  - name: Create sioc directory in $IOC if it doesn't exist
    ansible.builtin.file:
      path: '{{ ioc_filepath }}'
      state: directory
      mode: '775' # drwxrwxr-x

  - name: Create symbolic link for iocSpecificRelease
    ansible.builtin.file:
      src: '{{ executable_path }}'
      dest: '{{ ioc_filepath }}/iocSpecificRelease'
      state: link

    # 1) In $IOC_DATA, make directory for ioc if doesn't already exist
  - name: Create sioc directory in $IOC_DATA if it doesn't exist
    ansible.builtin.file:
      path: '{{ ioc_data_filepath }}'
      state: directory
      mode: '775' # drwxrwxr-x
    # 2) in the ioc folder, create these directories: archive, autosave, autosave-req, iocInfo, restore, yaml
  - name: Create multiple directories in $IOC_DATA/<IOC> if they doesn't exist
    ansible.builtin.file:
      path: '{{ item }}'
      state: directory
      mode: '775' # drwxrwxr-x
    loop:
      - '{{ ioc_data_filepath }}/archive'
      - '{{ ioc_data_filepath }}/autosave'
      - '{{ ioc_data_filepath }}/autosave-req'
      - '{{ ioc_data_filepath }}/iocInfo'
      - '{{ ioc_data_filepath }}/restore'
      - '{{ ioc_data_filepath }}/yaml'

  - name: Start ioc and shell into it
    ansible.builtin.shell: xterm -hold -e "siocRestart '{{ ioc_name }}' && iocConsole '{{ ioc_name }}'"

  # - name: Running softioc_deploy
  #   softioc_deploy:
  #     deploy_type: '{{ deploy_type }}'
  #     ioc_type: '{{ ioc_type }}'
  #     ioc_name: '{{ ioc_name }}'
  #     host_user: '{{ host_user }}'
  #     server_user_node_port: '{{ server_user_node_port }}'
  #     executable_path: '{{ executable_path }}'
  #     output_path: '{{ output_path }}'
  #   register: softioc_deploy_output
  # - name: dump softioc_deploy output
  #   debug:
  #     msg: '{{ softioc_deploy_output }}'

# <<<<< OLD - delete once done
# - name: Soft IOC Deployment
#   hosts: localhost
#   tasks:
#   - name: Running softioc_deploy
#     softioc_deploy:
#       deploy_type: '{{ deploy_type }}'
#       ioc_type: '{{ ioc_type }}'
#       ioc_name: '{{ ioc_name }}'
#       host_user: '{{ host_user }}'
#       server_user_node_port: '{{ server_user_node_port }}'
#       executable_path: '{{ executable_path }}'
#       output_path: '{{ output_path }}'
#     register: softioc_deploy_output
#   - name: dump softioc_deploy output
#     debug:
#       msg: '{{ softioc_deploy_output }}'
