# Deployment for build containers
# TODO: Everything, i just copied runner-deployment.yml for now
# Can use this as the base deployment, and we can have the backend
# replace the app name and image when deploying this
# Parameters:
# COMPONENT: component name
# BRANCH: branch name
# IMAGE: image name
# MOUNT_FILEPATH: mount filepath (ex: /sdf/scratch, /sdf/group/ad/scratch)
  # TODO: figure out how the mount works - seems like its the volumeClaim that matters
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: s3df-dev-container-ad-group
spec:
  storageClassName: sdf-group-ad
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: job
metadata:
  name: build-job
spec:
  selector:
    matchLabels:
      app: {{COMPONENT}}-{{BRANCH}}
  template:
    metadata:
      labels:
        app: {{COMPONENT}}-{{BRANCH}}
      annotations:
        app: {{COMPONENT}}-{{BRANCH}}
    spec:
      # securityContext:
      #   runAsUser: 1000
      #   runAsGroup: 1006
      #   fsGroup: 1006
      containers:
      - name: {{COMPONENT}}-{{BRANCH}}
        image: {{IMAGE}}
        imagePullPolicy: Always
        command: ["./build.sh"]
        restartPolicy: Never
        env:
        - name: ORGANIZATION
          value: ad-build-test
        - name: ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              name: runner-access-token
              key: runner-access-token
        volumeMounts:
        - name: s3df-dev-container-ad-group
          mountPath: /mnt
        resources:
          limits:
            memory: 8Gi
            cpu: 4000m
      volumes:
      - name: s3df-dev-container-ad-group
        persistentVolumeClaim:
          claimName: s3df-dev-container-ad-group